name: Pull Request build and test

on:
  workflow_call:
  workflow_dispatch:
  merge_group:
  pull_request:
  push:
    branches:
      - main

env:
  PLUGIN_ARTIFACT_NAME: 'openfga_intellij_plugin'
  DIST_FOLDER: 'build/distributions'

jobs:
  build:
    name: Build OpenFGA plugin for IntelliJ Platform
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Java 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build the plugin using Gradle
        run: ./gradlew check buildPlugin

      - name: Upload artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: '${{ env.PLUGIN_ARTIFACT_NAME }}'
          path: '${{ env.DIST_FOLDER }}/'


  test_compatibility:
    name: Test plugin compatibility with IntelliJ Platform 2024.1
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ide-version:
          - clion:2024.1
          - goland:2024.1
          - ideaIC:2024.1
          - ideaIC:LATEST-EAP-SNAPSHOT
          - ideaIU:2024.1
          - phpstorm:2024.1
          - pycharmPC:2024.1
          - pycharmPY:2024.1
          - riderRD:2024.1
          - webstorm:2024.1
    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Download built plugin artifact
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: ${{ env.PLUGIN_ARTIFACT_NAME }}
          path: ${{ env.DIST_FOLDER }}

      - name: Verify Plugin on IntelliJ Platforms
        id: verify
        uses: ChrisCarini/intellij-platform-plugin-verifier-action@d77446f25d37dcbe69f72ae7da879b2ee8f85311 # v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          ide-versions: ${{ matrix.ide-version }}
          plugin-location: '${{ env.DIST_FOLDER }}/*.zip'

      - name: Get log file path and print contents
        run: |
          echo "The verifier log file [${{steps.verify.outputs.verification-output-log-filename}}] contents : " ;
          cat ${{steps.verify.outputs.verification-output-log-filename}}